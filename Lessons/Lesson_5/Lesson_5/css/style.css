/* &display=swap&subset=cyrillic-ext */
@import url("https://fonts.googleapis.com/css?family=Poppins:100,100italic,200,200italic,300,300italic,regular,italic,500,500italic,600,600italic,700,700italic,800,800italic,900,900italic&display=swap&subset=cyrillic-ext");

@font-face {
	font-family: "Gilroy";
	src: url("../fonts/Gilroy-Regular.woff2") format("woff2"), url("../fonts/Gilroy-Regular.woff") format("woff");
	font-weight: normal;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: "Gilroy";
	src: url("../fonts/Gilroy-Bold.woff2") format("woff2"), url("../fonts/Gilroy-Bold.woff") format("woff");
	font-weight: bold;
	font-style: normal;
	font-display: swap;
}

/* ОБНУЛЕНИЕ СТИЛЕЙ */
*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	border: 0;
	box-sizing: border-box;
}
li {
	list-style: none;
}
a,
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: inherit;
	font-size: inherit;
}
img {
	vertical-align: top;
}
html,
body {
	height: 100%;
}
html {
	font-size: 16px; /* по умолчанию */
}
body {
	/* font-family: "Gilroy", sans-serif; */
	line-height: 1;
}
.wrapper {
	min-height: 100%;
	overflow: hidden;
}
/* ------------------------------ */
/** Внутренний отступ элемента
При указании поля в процентах, значение считается от ширины родителя элемента. Свойство не наследуется.
	padding: со_всех_сторон;
	padding: сверху,   справа,   снизу,  слева;
	padding: сверху_снизу,    справа_слева;
	padding: сверху,   справа_слева,   снизу;
Отступ сверху и снизу не действует на срочные теги
========================================= */



/** Внешний отступ элемента
При указании поля в процентах, значение считается от ширины родителя элемента. Свойство не наследуется.
Значение может быть как положительным, так и отрицательным числом.
	margin: со_всех_сторон;
	margin: сверху,   справа,   снизу,   слева;
	margin: сверху_снизу,   справа_слева;
	margin: сверху,   справа_слева,   снизу;
Отступ сверху и снизу не действует на срочные теги
=========================================
 */
.block {
	font-size: 30px;
	background-color: rgb(23, 161, 53);
	color: #fff;
	
	padding: 50px;
	margin: 50px;
}

.inline{
	font-size: 30px;
	background-color: #7b4009;
	color: #fff;
	width: 500px;
	padding: 50px;
	margin: 50px;
/* НЕ работают для строчного объекта  */
}

.image {
	width: 50%;
	padding: 50px;
	background-color: black;
	

}
/* 
.block2 {
	font-size: 30px;
	padding:50px;
	background-color: aquamarine;
	
}
.block3 {
	font-size: 30px;
	padding:50px;
	background-color: rgb(159, 127, 255);
} */
/** 	width
Устанавливает ширину блочных тегов и некоторых строчных (например img)
Свойство не наследуется.
	width:100px;
	width:10%;
 */
.block{
	/* width: 500px;
	margin: 20px auto 50px; */
}

/** box-sizing
Применяется для изменения алгоритма расчета ширины и высоты элемента. 
Свойство наследуется.
•	content-box - Основывается на стандартах CSS, при этом свойства width и height задают ширину и высоту контента и не включают в себя значения отступов, полей и границ.
•	border-box - Свойства width и height включают в себя значения полей и границ, но не отступов (margin). Эта модель используется браузером Internet Exporer в режиме несовместимости.
•	padding-box - Свойства width и height включают в себя значения полей, но не отступов (margin) и границ (border). 
 */

/*  Центрование объекта с помощью margin со значением  auto:last-child 
1) Объект должен быть блочным
2) Объект должен быть ограничен по ширине, быть уже чем родитель
3) margin: 0px auto;
 */


/** width:
Устанавливает ширину блочных тегов и некоторых строчных (например img)
Свойство не наследуется.
	width:100px;
	width:10%;

	max-width
Устанавливает максимальную ширину блочных тегов и некоторыйх строчных (например img)

	min-width
Устанавливает минимальную ширину блочных тегов и некоторыйх строчных (например img)
 */

.block{
	/* max-width: 700px;
	margin: 0 auto; */
}

/** height:
Устанавливает высоту блочных тегов и некоторыйх строчных (например img)
Свойство не наследуется.
	height:100px;
	height:10%;

	min-height
Свойство не наследуется.

	max-height
Свойство не наследуется.
 */
.block{
/* height: 500px; */
}

/** overflow 
Управляет отображением содержания блочного элемента
•	visible - Отображается все содержание элемента, даже за пределами установленной высоты и ширины. 
•	hidden - Отображается только область внутри элемента, остальное будет скрыто.
•	scroll - Всегда добавляются полосы прокрутки.
•	auto - Полосы прокрутки добавляются только при необходимости.
 */


.block {
	/* overflow: hidden; */
}

/** display:
Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе.
Свойство не наследуется.
•	block - Элемент показывается как блочный. Применение этого значения для встроенных элементов, например тега <span>, заставляет его вести подобно блокам — происходит перенос строк в начале и в конце содержимого. 
•	inline - Элемент отображается как встроенный. Использование блочных тегов, таких как <div> и <p>, автоматически создает перенос и показывает содержимое этих тегов с новой строки. Значение inline отменяет эту особенность, поэтому содержимое блочных элементов начинается с того места, где окончился предыдущий элемент.
•	inline - block - Это значение генерирует блочный элемент, который обтекается другими элементами веб-страницы подобно встроенному элементу. Фактически такой элемент по своему действию похож на встраиваемые элементы (вроде тега <img>). При этом его внутренняя часть форматируется как блочный элемент, а сам элемент — как встроенный.
•	none - Временно удаляет элемент из документа. Занимаемое им место не резервируется и веб-страница формируется так, словно элемента и не было. 
  */

.link {
	font-size: 80px;
	color: red;
	margin: 0px 0px 100px 0px;
	/* По умолчанию */
	display: inline;
}

.header {
	/* По умолчанию */
	display: block;
}

.image {
	/* По умолчанию */
	display: inline-block;
}

.text {
	/* display: none; */
	font-size: 50px;
}